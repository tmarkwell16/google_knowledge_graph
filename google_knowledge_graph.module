<?php

/**
*	@file
* Generate JSON-LD code for Google Knowledge Graph.
**/

// =================================
// = Implements hook_permission(). =
// =================================

function google_knowledge_graph_permission() {
	$permission = array(
		'administer google kg' => array(
			'title' => t('Administer Google Knowledge Graph'),
			'description' => t('Configure Google Knowledge Graph settings.'),
		),
	);
	return $permission;
}

// ===========================
// = Implements hook_menu(). =
// ===========================

function google_knowledge_graph_menu() {
	$items = array();
	
	$items['admin/config/system/googlekg'] = array(
		'title' => t('Google Knowledge Graph Settings'),
		'description' => t('Google Knowledge Graph Settings'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('google_knowledge_graph_admin_settings'),
		'access arguments' => array('administer google kg'),
	);
	return $items;
}

// =================================
// = Construct admin settings form =
// =================================

function google_knowledge_graph_admin_settings() {
	$current_theme = variable_get('theme_default', 'none');
	$fields = field_info_instances('node', 'article');
	foreach ($fields as $key => $field) {
		$widget_type = $field['widget']['type'];
		$widget_type = explode('_', $widget_type);
		if (in_array('textarea', $widget_type)) {
			$field_options[$key] = $field['label'];
		}	
	}
	
	$form['blog_info'] = array(
		'#type' => 'fieldset',
		'#title' => t('Article Content Type Information'),
		'#collapsible' => FALSE,
	);
	$form['blog_info']['blog_field_options'] = array(
		'#type' => 'select',
		'#title' => t('Select Description Field'),
		'#description' => t('Select the field you want the Knowledge Graph description info pulled from.'),
		'#options' => $field_options,
		'#default_value' => variable_get('blog_field_options'),
	);
	$form['company_info'] = array(
		'#type' => 'fieldset',
		'#title' => t('Company Information'),
		'#collapsible' => FALSE,
	);
	$form['company_info']['description'] = array(
		'#type' => 'item',
		'#title' => t('Provide the information below for your company. 
			Your Knowledge Graph information will be generated from this information.'),
	);
	$form['company_info']['co_type'] = array(
		'#type' => 'select',
		'#title' => t('Company Type'),
		'#description' => t('Select the company type that best fits your company'),
		'#options' => google_knowledge_graph_get_options('co_type'),
		'#default_value' => variable_get('co_type', 'LocalBusiness'),
		'#required' => TRUE,
	);
	$form['company_info']['co_name'] = array(
		'#type' => 'textfield',
		'#title' => t('Company Name'),
		'#default_value' => variable_get('co_name', ''),
		'#required' => TRUE,
	);
	$form['company_info']['co_url'] = array(
		'#type' => 'textfield',
		'#title' => t('Company Website URL'),
		'#default_value' => variable_get('co_url', ''),
		'#required' => TRUE,
	);
	$form['company_info']['contact_info'] = array(
		'#type' => 'fieldset',
		'#title' => t('Contact Information'),
		'#collapsible' => FALSE,
	);
	$form['company_info']['contact_info']['co_address'] = array(
		'#type' => 'textfield',
		'#title' => t('Street Address'),
		'#default_value' => variable_get('co_address', ''),
		'#required' => TRUE,
	);
	$form['company_info']['contact_info']['co_city'] = array(
		'#type' => 'textfield',
		'#title' => t('City'),
		'#default_value' => variable_get('co_city', ''),
		'#required' => TRUE,
	);
	$form['company_info']['contact_info']['co_state'] = array(
		'#type' => 'select',
		'#title' => t('State'),
		'#options' => google_knowledge_graph_get_options('co_state'),
		'#default_value' => variable_get('co_state', 0),
		'#required' => TRUE,
	);
	$form['company_info']['contact_info']['co_postalcode'] = array(
		'#type' => 'textfield',
		'#title' => t('Zip/Postal Code'),
		'#default_value' => variable_get('co_postalcode', ''),
		'#required' => TRUE,
	);
	$form['company_info']['contact_info']['co_phone'] = array(
		'#type' => 'textfield',
		'#title' => t('Phone'),
		'#default_value' => variable_get('co_phone', ''),
		'#required' => TRUE,
	);
	$form['company_info']['logo_info'] = array(
		'#type' => 'fieldset',
		'#title' => t('Logo Information'),
		'#collapsible' => FALSE,
	);
	$form['company_info']['logo_info']['co_logo'] = array(
		'#type' => 'textfield',
		'#title' => t('URL to Company Logo File'),
		'#description' => t('Enter a fully qualified URL to your company logo file. 
			Leave the default value if you have a logo uploaded to your current theme.'),
		'#default_value' => variable_get('co_logo', theme_get_setting('logo', $current_theme)),
		'#required' => TRUE,
	);
	$form['company_info']['logo_info']['co_logo_width'] = array(
		'#type' => 'textfield',
		'#title' => t('Logo Width'),
		'#description' => t('Enter the width of your logo image, in pixels.
			Type the number only, do not include "px."'),
		'#default_value' => variable_get('co_logo_width', ''),
		'#required' => TRUE,
	);
	$form['company_info']['logo_info']['co_logo_height'] = array(
		'#type' => 'textfield',
		'#title' => t('Logo Height'),
		'#description' => t('Enter the height of your logo image, in pixels.
			Type the number only, do not include "px."'),
		'#default_value' => variable_get('co_logo_height', ''),
		'#required' => TRUE,
	);
	$form['company_info']['area_info'] = array(
		'#type' => 'fieldset',
		'#title' => t('Area Information'),
		'#collapsible' => FALSE,
	);
	$form['company_info']['area_info']['co_area_type'] = array(
		'#type' => 'select',
		'#title' => t('Area Served'),
		'#description' => t('Choose the type of area your company serves. 
			Leave blank if you don\'t serve a specific area.'),
		'#options' => google_knowledge_graph_get_options('co_area_type'),
		'#default' => variable_get('co_area_type', 0),
	);
	$form['company_info']['area_info']['co_area_served'] = array(
		'#type' => 'textfield',
		'#title' => t('Name of Area Served'),
		'#description' => t('Type in the name of the area your company serves. 
			Leave blank if you do not wish to list this information in your knowledge graph.'),
		'#default_value' => variable_get('co_area_served', ''),
	);
	$form['company_info']['area_info']['co_map'] = array(
		'#type' => 'textfield',
		'#title' => t('URL to Google Map'),
		'#description' => 'Enter a fully qualified URL to a Google Map to your company. 
			Go to <a href="https://www.google.com/maps" target="_blank">Google Maps</a> to get your URL.',
		'#default_value' => variable_get('co_map', ''),
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => 'Save Configuration',
	);
	return $form;
}

// =============================================================
// = Submit callback for google_knowledge_graph_admin_settings =
// =============================================================

function google_knowledge_graph_admin_settings_submit($form, &$form_state) {
	variable_set('blog_field_options', $form_state['values']['blog_field_options']);
	variable_set('co_type', $form_state['values']['co_type']);
	variable_set('co_name', $form_state['values']['co_name']);
	variable_set('co_address', $form_state['values']['co_address']);
	variable_set('co_city', $form_state['values']['co_city']);
	variable_set('co_state', $form_state['values']['co_state']);
	variable_set('co_postalcode', $form_state['values']['co_postalcode']);
	variable_set('co_phone', $form_state['values']['co_phone']);
	variable_set('co_url', $form_state['values']['co_url']);
	variable_set('co_area_type', $form_state['values']['co_area_type']);
	variable_set('co_area_served', $form_state['values']['co_area_served']);
	variable_set('co_logo', $form_state['values']['co_logo']);
	variable_set('co_logo_width', $form_state['values']['co_logo_width']);
	variable_set('co_logo_height', $form_state['values']['co_logo_height']);
	variable_set('co_map', $form_state['values']['co_map']);
	
	drupal_set_message(t('Configuration settings have been saved'));
}

// ================================================
// = Provide options lists for select field types =
// ================================================

function google_knowledge_graph_get_options($list) {
	if ($list == 'co_type') {
		$options = array(
			'LocalBusiness' => 'Local Business',
			'AnimalShelter' => 'Animal Shelter',
			'AutomotiveBusiness' => 'Automotive Business',
			'ChildCare' => 'Child Care',
			'DryCleaningOrLaundry' => 'Dry Cleaning Or Laundry',
			'EmergencyService' => 'Emergency Service',
			'EmploymentAgency' => 'Employment Agency',
			'EntertainmentBusiness' => 'Entertainment Business',
			'FinancialService' => 'Financial Service',
			'FoodEstablishment' => 'Food Establishment',
			'GovernmentOffice' => 'Government Office',
			'HealthAndBeautyBusiness' => 'Health And Beauty Business',
			'HomeAndConstructionBusiness' => 'Home And Construction Business',
			'InternetCafe' => 'Internet Cafe',
			'LegalService' => 'Legal Service',
			'Library' => 'Library',
			'LodgingBusiness' => 'Lodging Business',
			'MedicalOrganization' => 'Medical Organization',
			'ProfessionalService' => 'Professional Service',
			'RadioStation' => 'Radio Station',
			'RealEstateAgent' => 'Real Estate Agent',
			'RecyclingCenter' => 'Recycling Center',
			'SelfStorage' => 'Self Storage',
			'ShoppingCenter' => 'Shopping Center',
			'SportsActivityLocation' => 'Sports Activity Location',
			'Store' => 'Store',
			'TelevisionStation' => 'Television Station',
			'TouristInformationCenter' => 'Tourist Information Center',
			'TravelAgency' => 'Travel Agency',
		);
	} elseif ($list == 'co_state') {
		$options = array(
	    'AL'=>'ALABAMA',
	    'AK'=>'ALASKA',
	    'AS'=>'AMERICAN SAMOA',
	    'AZ'=>'ARIZONA',
	    'AR'=>'ARKANSAS',
	    'CA'=>'CALIFORNIA',
	    'CO'=>'COLORADO',
	    'CT'=>'CONNECTICUT',
	    'DE'=>'DELAWARE',
	    'DC'=>'DISTRICT OF COLUMBIA',
	    'FM'=>'FEDERATED STATES OF MICRONESIA',
	    'FL'=>'FLORIDA',
	    'GA'=>'GEORGIA',
	    'GU'=>'GUAM GU',
	    'HI'=>'HAWAII',
	    'ID'=>'IDAHO',
	    'IL'=>'ILLINOIS',
	    'IN'=>'INDIANA',
	    'IA'=>'IOWA',
	    'KS'=>'KANSAS',
	    'KY'=>'KENTUCKY',
	    'LA'=>'LOUISIANA',
	    'ME'=>'MAINE',
	    'MH'=>'MARSHALL ISLANDS',
	    'MD'=>'MARYLAND',
	    'MA'=>'MASSACHUSETTS',
	    'MI'=>'MICHIGAN',
	    'MN'=>'MINNESOTA',
	    'MS'=>'MISSISSIPPI',
	    'MO'=>'MISSOURI',
	    'MT'=>'MONTANA',
	    'NE'=>'NEBRASKA',
	    'NV'=>'NEVADA',
	    'NH'=>'NEW HAMPSHIRE',
	    'NJ'=>'NEW JERSEY',
	    'NM'=>'NEW MEXICO',
	    'NY'=>'NEW YORK',
	    'NC'=>'NORTH CAROLINA',
	    'ND'=>'NORTH DAKOTA',
	    'MP'=>'NORTHERN MARIANA ISLANDS',
	    'OH'=>'OHIO',
	    'OK'=>'OKLAHOMA',
	    'OR'=>'OREGON',
	    'PW'=>'PALAU',
	    'PA'=>'PENNSYLVANIA',
	    'PR'=>'PUERTO RICO',
	    'RI'=>'RHODE ISLAND',
	    'SC'=>'SOUTH CAROLINA',
	    'SD'=>'SOUTH DAKOTA',
	    'TN'=>'TENNESSEE',
	    'TX'=>'TEXAS',
	    'UT'=>'UTAH',
	    'VT'=>'VERMONT',
	    'VI'=>'VIRGIN ISLANDS',
	    'VA'=>'VIRGINIA',
	    'WA'=>'WASHINGTON',
	    'WV'=>'WEST VIRGINIA',
	    'WI'=>'WISCONSIN',
	    'WY'=>'WYOMING',
	    'AE'=>'ARMED FORCES AFRICA \ CANADA \ EUROPE \ MIDDLE EAST',
	    'AA'=>'ARMED FORCES AMERICA (EXCEPT CANADA)',
	    'AP'=>'ARMED FORCES PACIFIC'
    );
	} elseif ($list == 'co_area_type') {
		$options = array(
			'Select Area Type' => 'Select Area Type',
			'city' => 'city',
			'state' => 'state',
		);
	}
	return $options;
}

// ==========================================
// = Add knowledge graph script to the head =
// ==========================================

function google_knowledge_graph_preprocess_html(&$variables) {
	$co_type = variable_get('co_type', '');
	$co_name = variable_get('co_name', '');
	$co_address = variable_get('co_address', '');
	$co_city = variable_get('co_city', '');
	$co_state = variable_set('co_state', '');
	$co_postalcode = variable_get('co_postalcode', '');
	$co_phone = variable_get('co_phone', '');
	$co_url = variable_get('co_url', '');
	$co_area_type = variable_get('co_area_type', '');
	$co_area_served = variable_get('co_area_served', '');
	$co_logo = variable_get('co_logo', '');
	$co_logo_width = variable_get('co_logo_width', '');
	$co_logo_height = variable_get('co_logo_height', '');
	$co_map = variable_get('co_map', '');
	$co_markup = '<script type="application/ld+json">
		{ "@context": "http://schema.org/",
			"@type": "' . $co_type . '",
			"name": "' . $co_name . '",
			"address": {
				"@type": "PostalAddress",
				"addressLocality": "' . $co_city . '",
				"addressRegion": "' . $co_state . '",
				"postalCode": "' . $co_postalcode . '",
				"streetAddress": "' . $co_address . '"
				},
			"telephone": "' . $co_phone . '",
			"url": "' . $co_url . '",';
	if ($co_area_type !== 'Select Area Type') {
		$co_markup .= '"areaServed": {
				"@type": "' . $co_area_type . '",
				"name": "' . $co_area_served . '"
				},';
	}
	if (!empty($co_map)) {
		$co_markup .= '"maps": "'. $co_map . '",';
	}
	$co_markup .= '"logo": "' . $co_logo . '"
			}</script>';
			
	$co_element = array(
		'#type' => 'markup',
		'#markup' => $co_markup,
	);
	
	drupal_add_html_head($co_element, 'co-gkg');
	
	// Check if the node type is article.
	// Load node and initiate variables for generating the blog knowledge graph code.
		
	if ($variables['classes_array'][4] == 'page-node') {
		if ($variables['classes_array'][7] == 'node-type-article') {
			$nid = $variables['classes_array'][6];
			$nid = explode('-', $nid);
			$node = node_load($nid[2]);
			$user = user_load($node->uid);
			$blog_desc_field = variable_get('blog_field_options');
			$field = field_info_field($blog_desc_field);
			
			global $base_url;
			$url_alias = '/' . drupal_get_path_alias('node/'.$nid[2]);
			$blog_url = $base_url . $url_alias;
			$blog_title = $node->title;
			$image_field = field_get_items('node', $node, 'field_image');
			if ($image_field) {
			  $blog_image = file_create_url($image_field[0]['uri']);
			  $blog_image_width = $image_field[0]['width'];
			  $blog_image_height = $image_field[0]['height'];
			} else {
				$blog_image = $co_logo;
				$blog_image_width = $co_logo_width;
				$blog_image_height = $co_logo_height;
			}
			$blog_pub_date = date('Y-m-dTH:i:s', $node->created);
			$blog_change_date = date('Y-m-dTH:i:s', $node->changed);
			$blog_author = $user->name;
			
			$desc_field = field_get_items('node', $node, $blog_desc_field);
			switch ($field['type']) {
	
				case 'metatags_quick':
				$blog_desc = $desc_field[0]['metatags_quick'];
				$blog_desc = str_replace('"', '\"', $blog_desc);
				break;
	
				case 'text_with_summary':
				if (!empty($desc_field[0]['safe_summary'])) {
					$blog_desc = strip_tags($desc_field[0]['safe_summary']);
					$blog_desc = str_replace('"', '\"', $blog_desc);
				} else {
					$blog_desc = substr(strip_tags($desc_field[0]['safe_value']), 0, 160) . '...';
					$blog_desc = str_replace('"', '\"', $blog_desc);
				}
				break;
	
				case 'text_long':
				$blog_desc = substr(strip_tags($desc_field[0]['safe_value']), 0, 160) . '...';
				$blog_desc = str_replace('"', '\"', $blog_desc);
				break;
			}
			
			$blog_markup = '<script type="application/ld+json">
				{
					"@context": "http://schema.org",
					"@type": "BlogPosting",
					"mainEntityOfPage": {
						"@type": "WebPage",
						"@id": "' . $blog_url . '"
					},
					"headline": "' . $blog_title . '",
					"image": {
						"@type": "ImageObject",
						"url": "' . $blog_image . '",
						"width": "' . $blog_image_width . '",
						"height": "' . $blog_image_height . '"
					},
					"datePublished": "' . $blog_pub_date . '",
					"dateModified": "' . $blog_change_date . '",
					"author": {
						"@type": "Person",
						"name": "' . $blog_author . '"
					},
					"publisher": {
						"@type": "' . $co_type . '",
						"name": "' . $co_name . '",
						"logo": {
							"@type": "ImageObject",
							"url": "' . $co_logo . '"
						}
					},
					"description": "' . $blog_desc . '"
				}';
				
				$blog_element = array(
					'#type' => 'markup',
					'#markup' => $blog_markup,
				);
				
				drupal_add_html_head($blog_element, 'blog-gkg');
		}
	}
}
